apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: yocto-whisk-build
  namespace: yocto-build
spec:
  workspaces:
    - name: build
      description: The build workspace
    - name: cache
      description: The build cache (sstate and downloads)
      optional: true
  params:
    - name: products
      description: The product(s) to build
      type: string
    - name: mode
      description: The mode to build
      type: string
    - name: site
      description: The site where build
      type: string
    - name: version
      description: The version to build against
      type: string
      default: default
    - name: initScript
      description: The whisk init script
      type: string
      default: "./init-build-env"
    - name: buildDir
      description: The build directory
      type: string
      default: "build"
    - name: buildTargets
      description: The bitbake build target
      type: string
      default: "all-targets"
    - name: fetch
      description: Fetch modules with whisk
      type: string
      default: "false"
    - name: prefetchCommand
      description: prefetch command. Useful if whisk needs to be fetched prior to fetch layers
      type: string
      default: "git submodule update --init whisk"
    - name: subdirectory
      description: build in this subdirectory under the build workspace
      type: string
      default: ""
    - name: nice
      description: build niceness
      type: string
      default: "10"
  stepTemplate:
    resources:
      requests:
        cpu: "6"
        memory: "8Gi"
      limits:
        cpu: "6"
        memory: "8Gi"
  steps:
    - name: build
      image: joshuawatt/crops:ubuntu-20.04-base
      script: |
        NUM_CPUS="8"

        renice -n $(params.nice) -p $$$$

        echo $POD_NAME
        cd $(workspaces.build.path)/$(params.subdirectory)
        if [[ $(params.fetch) == "true" ]]; then
          $(params.prefetchCommand)
          FETCH_ARGS="--fetch"
        else
          FETCH_ARGS=""
        fi
        . $(params.initScript) \
          --product="$(params.products)" \
          --mode="$(params.mode)" \
          --site="$(params.site)" \
          --version="$(params.version)" \
          --build="$(params.buildDir)" \
          $FETCH_ARGS

        mkdir -p /mnt/cache/sstate
        mkdir -p /mnt/cache/downloads

        cat >> conf/local.conf <<HEREDOC
        SSTATE_DIR = "/mnt/cache/sstate"
        DL_DIR = "/mnt/cache/downloads"

        PARALLEL_MAKE = "-j $NUM_CPUS"
        BB_NUMBER_THREADS = "$NUM_CPUS"

        BB_TASK_NICE_LEVEL = "$(params.nice)"
        HEREDOC

        bitbake $(params.buildTargets)
      volumeMounts:
        - name: cache
          mountPath: /mnt/cache
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
  volumes:
    - name: cache
      persistentVolumeClaim:
        claimName: yocto-cache-volume-claim
